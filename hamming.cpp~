/*
ID:svasude2
PROG:hamming
LANG:C++
*/
#include <iostream>
#include <fstream>
#include <stdlib.h>
#include <math.h>
#define MAX_N 64
using namespace std;
int current_list[MAX_N]={0};
int N,B,D;
int hamming(int number,int distance,int count)
{
  
  if (count==0) return 1;
  else if (count>=64) return 0;
  else
    {
      for (int i=0;i<count;i++)
	{
	  int XOR=number^current_list[i];//bitwise xor
	  int temp=0;
	  for(int j=0;j<B;j++)
	    {
	      if (XOR%2==1) temp++;
	      XOR>>1;
	    }
	  if (!(temp>=D)) return 0; 

	}
      return 1;
    }

}

int main()
{

  ifstream fin ("hamming.in");
  ofstream fout ("hamming.out");
  
  fin>>N>>B>>D;
  int Max=(int) pow(2,B);
  for (int i=0;i<Max;i++)
    {
      int count=0;
      for (int j=i;j<Max;j++) if (hamming(j,D,count)) current_list[count++]=j;
      if (count>=N) break;
      for (int ll=0;ll<count;ll++) cout<<current_list[ll]<<" ";
      cout<<endl;
    }
  



}









  
